#!/bin/bash
#
# dotfiles installation script.
#
# Usage:
# ./install (--force)
#
# This command is used for both the initial installation and updating.
#
# Source: https://github.com/mathiasbynens/dotfiles/blob/master/bootstrap.sh
#
# Argbash docs: http://argbash.readthedocs.io/en/stable/example.html
#
# ARG_OPTIONAL_BOOLEAN([force],[],[Force the bootstrap installation script to be executed again])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.4.1a one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info

die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}

begins_with_short_option()
{
	local first_option all_short_options
	all_short_options=''
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}



# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_force=off

print_help ()
{
	printf 'Usage: %s [--(no-)force]\n' "$0"
	printf "\t%s\n" "--force,--no-force: Force the bootstrap installation script to be executed again (off by default)"

}

parse_commandline ()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			--no-force|--force)
				_arg_force="on"
				test "${1:0:5}" = "--no-" && _arg_force="off"
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash


forced=$_arg_force

## Read user input, taking the first character that was entered (-n 1)
read -p "This may overwrite existing files in your home directory. Are you sure? (y/n) " -n 1;
echo "";

## Sync files into the relevant locations, overwriting anything that exists.
## todo: possibly store a backup of these somewhere incase the installation screws something up
if [[ $REPLY =~ ^[Yy]$ ]]; then

  ## Grab the latest version
  git pull origin master

  ## Optionally run the bootstrap script in the following circumstances:
  ## - --forced flag passed
  ## - If the script hasn't been run before
  if [ $forced == "on" -o  ! -e "$HOME/.dotfile-bootstrapped" ]; then
    ./bootstrap
  fi

  rsync --exclude ".git/" \
    --exclude ".DS_Store" \
    --exclude ".osx" \
    --exclude "install" \
    --exclude "bootstrap" \
    --exclude "README.md" \
    --exclude "themes/" \
    -avh --no-perms . ~;

    source ~/.bash_profile
else
  echo "User cancelled installation. - :("
fi;


# ] <-- needed because of Argbash
